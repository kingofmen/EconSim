syntax = "proto3";
package population.proto;

import "market/proto/goods.proto";

message Consumption {
  market.proto.Container consumed = 1;
  market.proto.Container capital = 2;
}

message ConsumptionPackage {
  Consumption food = 1;
  Consumption shelter = 2;
  Consumption culture = 3;

  // You must be at least this [tag] to use the package.
  market.proto.Container required_tags = 4;

  // Tags acquired by consuming this package.
  market.proto.Container tags = 5;
}

message ConsumptionLevel {
  // Different options for this consumption level.
  repeated ConsumptionPackage packages = 1;
  // Tags acquired by consuming at this level.
  market.proto.Container tags = 2;
}

message AutoProduction {
  market.proto.Container output = 1;
  market.proto.Container required_tags = 2;
}

message PopUnit {
  uint64 pop_id = 1;
  repeated int32 males = 2;
  repeated int32 women = 3;
  market.proto.Container wealth = 4;

  // Tags include education level and culture.
  market.proto.Container tags = 5;
}

message VariantInfo {
  double unit_cost = 1;
  double possible_scale = 2;
}

message StepInfo {
  repeated VariantInfo variant = 1;
  int32 best_variant = 2;
}

message ProductionInfo {
  string name = 1;
  double max_scale = 2;
  double total_unit_cost = 3;
  repeated StepInfo step_info = 4;
  string reject_reason = 5;
}

// Holds information about which production chain was
// selected and why.
message ProductionDecision {
  // The best chain, if there is one.
  ProductionInfo selected = 1;
  // Chains rejected as impossible.
  map<string, string> insufficient = 2;
  // Chains that are possible, but not as good as the selected one.
  repeated ProductionInfo rejected = 3;
}
